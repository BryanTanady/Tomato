@startuml

' Sequence Diagram: User Authentication
actor User
participant "Tomato" as App
participant ":User" as AuthService
participant "Database" as DB

== User Registration ==
activate User
User -> App: Register (username, password)
activate App
App -> AuthService: register(username, password)
activate AuthService
AuthService -> DB: Store (hashed-password)
activate DB
alt Registration Successful
    DB -> AuthService: Confirm stored
    deactivate DB
    AuthService -> App: Return registered username
    App -> User: Registration Successful
else Registration Failed
    AuthService -> App: Throw UserRegistrationFailedException
    deactivate AuthService
    App -> User: Show error message
end

== User Login ==
User -> App: Key Login Details (username, password)
App -> AuthService: login(username, password)
activate AuthService
AuthService -> DB: Validate credentials
activate DB
alt Authentication Successful
    DB -> AuthService: Return valid user data
    deactivate DB
    AuthService -> App: Return AuthResponse (token, username)
    App -> User: Grant access
else Authentication Failed
    AuthService -> App: Throw AuthException
    deactivate AuthService
    App -> User: Show error message
end

@enduml
